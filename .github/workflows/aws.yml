name: Build and Deploy

on:
  push:
    branches:
      - master

env:
  DIST_NAME: 'Dashboard'
  S3BUCKET: 'dashboard-angular-project'

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'ui'

    strategy:
      matrix:
        node-version: [ 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    # Step 1
    - name: Checkout
      uses: actions/checkout@v4

    # Step 2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4 #this installs node and npm for us
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    # Step 3
    - name: Build
      run: |
        npm install
        npm update
        npm run-script build
    # Step 4
    - name: Zip Angular distribution
      run: |
        rm -rf ~/${{ env.DIST_NAME }}.zip
        mkdir distribution
        cp -r ~/work/angular-demo/angular-demo/ui/dist/ui/browser/. distribution 
        zip -r ~/${{ env.DIST_NAME }}.zip ./distribution
        (cd ~/work/angular-demo/angular-demo; zip -u ~/${{ env.DIST_NAME }}.zip appspec.yml)
        (cd ~/work/angular-demo/angular-demo; zip -ur ~/${{ env.DIST_NAME }}.zip ansible/)
        (cd ~/work/angular-demo/angular-demo; zip -ur ~/${{ env.DIST_NAME }}.zip scripts/)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Upload distribution to S3
      run: aws s3 cp ~/${{ env.DIST_NAME }}.zip s3://${{ env.S3BUCKET }}/

  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    steps:
     # Step 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
     # Step 2
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name Dashboard \
            --deployment-group-name demo-production \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --s3-location bucket=dashboard-angular-project,bundleType=zip,key=Dashboard.zip
